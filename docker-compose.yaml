version: '3'

services:
  zoo:
    image: zookeeper:3.4.9
    container_name: zoo
    ports:
      - "2181:2181"
    environment:
        ZOO_MY_ID: 1
        ZOO_PORT: 2181
        ZOO_SERVERS: server.1=zoo:2888:3888
    volumes:
      - zoo:/data
      - zoolog:/datalog

  kafka1:
    image: confluentinc/cp-kafka:5.3.1
    container_name: kafka1
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zoo:2181,zoo:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - kafka1:/var/lib/kafka/data
    depends_on:
      - zoo
    healthcheck:
      test: nc -z localhost 9092
      interval: 10s
      timeout: 30s
      retries: 2

  producer:
    build: ./producer/.
    container_name: producer
    environment:
      KAFKA: "kafka1:9092"
    depends_on:
      kafka1:
        condition: service_healthy

  consumer:
    build: ./consumer/.
    container_name: consumer
    environment:
      KAFKA: "kafka1:9092"
    depends_on:
      kafka1:
        condition: service_healthy

#  kafka2:
#    image: confluentinc/cp-kafka:5.3.1
#    container_name: kafka2
#    ports:
#      - "9093:9093"
#    environment:
#      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka2:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
#      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
#      KAFKA_ZOOKEEPER_CONNECT: "zoo:2181"
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#      KAFKA_BROKER_ID: 2
#      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
#      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
#    volumes:
#      - kafka2:/var/lib/kafka/data
#    depends_on:
#      - zoo
#
#  kafka3:
#    image: confluentinc/cp-kafka:5.3.1
#    container_name: kafka3
#    ports:
#      - "9094:9094"
#    environment:
#      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka3:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
#      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
#      KAFKA_ZOOKEEPER_CONNECT: "zoo:2181"
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#      KAFKA_BROKER_ID: 3
#      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
#      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
#    volumes:
#      - kafka3:/var/lib/kafka/data
#    depends_on:
#      - zoo


volumes:
  zoo:
  zoolog:
  kafka1:
#  kafka2:
#  kafka3: