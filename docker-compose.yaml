version: '2.4'
networks:
  cassandra:
  kafka-net:
    driver: bridge

services:
  zoo:
    image: zookeeper:3.4.9
    container_name: zoo
    ports:
      - "2181:2181"
    networks:
      - kafka-net
    environment:
        ZOO_MY_ID: 1
        ZOO_PORT: 2181
        ZOO_SERVERS: server.1=zoo:2888:3888
    volumes:
      - zoo:/data
      - zoolog:/datalog

  kafka1:
    image: confluentinc/cp-kafka:5.3.1
    container_name: kafka1
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zoo:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - kafka1:/var/lib/kafka/data
    networks:
      - kafka-net
    depends_on:
      - zoo
    healthcheck:
      test: nc -z localhost 9092
      interval: 10s
      timeout: 60s
      retries: 3

  kafka2:
    image: confluentinc/cp-kafka:5.3.1
    container_name: kafka2
    ports:
      - "9093:9093"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zoo:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka2:9093,PLAINTEXT_HOST://localhost:29093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - kafka2:/var/lib/kafka/data
    networks:
      - kafka-net
    depends_on:
      - zoo
    healthcheck:
      test: nc -z localhost 9093
      interval: 10s
      timeout: 60s
      retries: 3

  kafka3:
    image: confluentinc/cp-kafka:5.3.1
    container_name: kafka3
    ports:
      - "9094:9094"
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zoo:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka3:9094,PLAINTEXT_HOST://localhost:29094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - kafka3:/var/lib/kafka/data
    networks:
      - kafka-net
    depends_on:
      - zoo
    healthcheck:
      test: nc -z localhost 9094
      interval: 10s
      timeout: 60s
      retries: 3

  kafka-connect:
    build: ./kafka-connect-configuration/.
    container_name: 'kafka-connect'
    hostname: 'kafka-connect'
    healthcheck:
      test: [ "CMD-SHELL", "nc -z localhost 8083 || exit 1" ]
      interval: 5s
      timeout: 5s
      retries: 60
    networks:
      - kafka-net
    ports:
      - '8083:8082'
    volumes:
      - ./kafka-connect:/etc/kafka-connect/jars
      - kafka-connect-conf:/etc/kafka-connect/connectors
    environment:
      - CONNECT_BOOTSTRAP_SERVERS=kafka1:9092,kafka2:9093,kafka3:9094
      - CONNECT_REST_PORT=8082
      - CONNECT_GROUP_ID=cassandraConnect
      - CONNECT_CONFIG_STORAGE_TOPIC=cassandraconnect-config
      - CONNECT_OFFSET_STORAGE_TOPIC=cassandraconnect-offset
      - CONNECT_STATUS_STORAGE_TOPIC=cassandraconnect-status
      - CONNECT_KEY_CONVERTER=org.apache.kafka.connect.json.JsonConverter
      - CONNECT_VALUE_CONVERTER=org.apache.kafka.connect.json.JsonConverter
      - CONNECT_INTERNAL_KEY_CONVERTER=org.apache.kafka.connect.json.JsonConverter
      - CONNECT_INTERNAL_VALUE_CONVERTER=org.apache.kafka.connect.json.JsonConverter
      - CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE=false
      - CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE=false
      - CONNECT_REST_ADVERTISED_HOST_NAME=kafka-connect
      - CONNECT_PLUGIN_PATH=/etc/kafka-connect/jars
    depends_on:
      - zoo
      - kafka1
      - kafka2
      - kafka3

  cass1:
    build: ./cassandra-configuration/.
    container_name: cass1
    hostname: cass1
    mem_limit: 3g
    healthcheck:
        test: ["CMD", "cqlsh", "-e", "describe keyspaces" ]
        interval: 5s
        timeout: 5s
        retries: 60
    networks:
      - cassandra
      - kafka-net
    ports:
      - "9042:9042"
    volumes:
      - cassandra_data:/var/lib/cassandra
    environment: &environment
        CASSANDRA_SEEDS: "cass1"
        CASSANDRA_CLUSTER_NAME: SolarSystem
        CASSANDRA_DC: Mars
        CASSANDRA_RACK: West
        CASSANDRA_ENDPOINT_SNITCH: GossipingPropertyFileSnitch
        CASSANDRA_NUM_TOKENS: 128
        CASSANDRA_KEYSPACE: chess
        CASSANDRA_TABLE: moves_by_game_id

  producer:
     build: ./producer/.
     container_name: producer
     environment:
       KAFKA1: "kafka1:9092"
       KAFKA2: "kafka2:9093"
       KAFKA3: "kafka3:9094"
     networks:
       - kafka-net
     depends_on:
      kafka1:
        condition: service_healthy
      kafka2:
        condition: service_healthy
      kafka3:
        condition: service_healthy

  consumer:
     build: ./consumer/.
     container_name: consumer
     environment:
       KAFKA1: "kafka1:9092"
       KAFKA2: "kafka2:9093"
       KAFKA3: "kafka3:9094"
     networks:
       - kafka-net
     depends_on:
      kafka1:
         condition: service_healthy
      kafka2:
         condition: service_healthy
      kafka3:
         condition: service_healthy

  chess-be:
      build: ./chess-be/.
      container_name: chess-be
      environment:
        CASSANDRA_CLUSTER: cass1
        CASSANDRA_KEYSPACE: chess
      ports:
        - "8008:8008"
      networks:
        - cassandra
      depends_on:
        cass1:
          condition: service_healthy
  chess-fe:
    container_name: chess-fe
    build: ./chess-fe/.
    ports:
      - "3000:3000"
    environment:
      REACT_APP_SERVER_PORT: 8008
    links:
      - "chess-be:be"
    depends_on:
      - chess-be

volumes:
  zoo:
  zoolog:
  kafka1:
  kafka2:
  kafka3:
  kafka-connect:
  kafka-connect-conf:
  cassandra_data: